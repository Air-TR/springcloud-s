spring:
  application:
    name: eureka-zuul

server:
  port: 5000

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

#################################################################################################################
# 以下配置重点介绍zuul路由的配置写法， 有两种方法，具体介绍见下面说明。 方法一和方法二不能同时使用，实际项目使用不推荐第二种方法。
#################################################################################################################
# 第一种方法：将URL转发到指定的 serviceId服务，通过指定 serviceId=服务名称 即可。
# path 与 servcieId 这两个配置就可以将以"/client"开头的url路由到eureka-client服务。
# 其中 zuul.routes.eureka-client 中的 eureka-client 是自己定义的（同理如下面的 ribbon 和 feign），需要指定它的 path 和 serviceId。
# 同理，以"/ribbon"开头的请求URL会被分发到 eureka-ribbon-client 服务，以"/feign"开头的请求URL会被分发到 eureka-feign-client 服务。
# 默认zuul已经结合Ribbon做了负载均衡，会将请求自动进行负载均衡路由到不同的服务实例。
# 其中 eureka-client, ribbon, feign 这三个名字可以自己任意定义，只要唯一就行。
zuul:
  routes:
    eureka-client:
      path: /client/**
      serviceId: eureka-client
    ribbon:
      path: /ribbon/**
      serviceId: eureka-ribbon-client
    feign:
      path: /feign/**
      serviceId: eureka-feign-client
  prefix: /v1  #如果想给每个服务的API接口加个统一前缀，就需要配置zuul.prefix。配置之后，访问路径变成/v1/client/**


# 第二种方式：将URL转发到指定的集群地址，通过指定listOfServers=URL1,URL2即可。【此方式 实际项目中不推荐使用】
# 以下配置演示指定URL，并且想做负载均衡。这个时候就需要自己维护负载均衡的服务注册列表
# 首先将 ribbon.eureka.enabled 设置为false，这样 ribbon 就不会向客户端 Eureka Client 获取服务注册列表
# 需要自己维护一份注册列表，listOfServers 来配置多个负载均衡的Url
#ribbon:
#  eureka:
#    enabled: false
#
#zuul:
#  routes:
#    eureka-client:
#      path: /client/**
#      serviceId: client-mydefine
#
#client-mydefine: # 对应上面的 serviceId
#  ribbon:
#    listOfServers: http://localhost:8771,http://localhost:8772,http://localhost:8773